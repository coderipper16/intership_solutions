import pandas as pd

# Replace with the actual filename if different
df = pd.read_csv("top_100_saas_companies_2025.csv")
df.head()

import numpy as np
import re

# Function to convert monetary values to float
def convert_money(value):
    if pd.isnull(value):
        return np.nan
    value = value.replace("$", "").replace(",", "").strip()
    match = re.match(r"([\d\.]+)([MBT]?)", value)
    if match:
        number, suffix = match.groups()
        number = float(number)
        if suffix == "M":
            return number * 1e6
        elif suffix == "B":
            return number * 1e9
        elif suffix == "T":
            return number * 1e12
        else:
            return number
    return np.nan

# Apply the conversion function
df['Total Funding (USD)'] = df['Total Funding'].apply(convert_money)
df['ARR (USD)'] = df['ARR'].apply(convert_money)
df['Valuation (USD)'] = df['Valuation'].apply(convert_money)

# Clean Employees column
df['Employees'] = df['Employees'].replace(',', '', regex=True).astype(float)

# Drop original text columns to reduce clutter
df_cleaned = df.drop(columns=['Total Funding', 'ARR', 'Valuation'])

# Preview cleaned data
df_cleaned.head()

import matplotlib.pyplot as plt
import seaborn as sns

# Set plot style
sns.set(style="whitegrid")
plt.figure(figsize=(16, 12))

# 1. Top 10 Companies by ARR
plt.subplot(3, 1, 1)
top_arr = df_cleaned.nlargest(10, 'ARR (USD)')
sns.barplot(x='ARR (USD)', y='Company Name', data=top_arr, palette="viridis")
plt.title("Top 10 Companies by ARR", fontsize=14)

# 2. Valuation vs ARR
plt.subplot(3, 1, 2)
sns.scatterplot(data=df_cleaned, x='ARR (USD)', y='Valuation (USD)', hue='Industry', palette='Set2', legend=False)
plt.title("Valuation vs ARR by Industry", fontsize=14)

# 3. Average ARR by Industry
plt.subplot(3, 1, 3)
industry_avg_arr = df_cleaned.groupby('Industry')['ARR (USD)'].mean().nlargest(10).sort_values()
sns.barplot(x=industry_avg_arr, y=industry_avg_arr.index, palette="coolwarm")
plt.title("Top 10 Industries by Average ARR", fontsize=14)

plt.tight_layout()
plt.show()
